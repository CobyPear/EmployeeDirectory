{"version":3,"sources":["utils/API.js","components/EmployeeCard.js","components/Buttton.js","components/SearchBar.js","components/EmployeeCards.js","App.js","index.js"],"names":["axios","get","EmployeeCard","result","className","src","picture","large","alt","name","first","last","cell","location","city","state","login","username","Button","props","onClick","handleFormSubmit","SearchBar","htmlFor","onChange","handleInputChange","value","type","placeholder","id","EmployeeCards","search","results","filteredResults","componentDidMount","searchEmployees","renderEmployees","map","key","API","then","res","setState","data","catch","err","console","error","event","target","preventDefault","updatedResults","filter","x","includes","renderSortedEmployees","sort","a","b","nameA","toUpperCase","nameB","comparison","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34b7940c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default {\r\n    search: function() {\r\n        return axios.get('https://randomuser.me/api/?results=200&nat=us')\r\n    }\r\n};","import React from 'react';\r\nfunction EmployeeCard({ result }) {\r\n    return (\r\n        <div className='card rounded-pill border-primary mb-2' >\r\n            <div className='row no-gutters'>\r\n                <div className='col-lg-4'>\r\n                    <img src={result.picture.large} alt={`${result.name.first} ${result.name.last}`} className='card-img rounded-circle border border-success ml-2 mt-2' />\r\n                </div>\r\n                <div className='col-lg-8'>\r\n                    <div className='card-body'>\r\n                        <h3 className='card-title'>{`${result.name.first} ${result.name.last}`}</h3>\r\n                        <ul className='card-text'>\r\n                            <li><strong>Cell: </strong> {result.cell}</li>\r\n                            <li><strong>Location: </strong> {`${result.location.city}, ${result.location.state}`}</li>\r\n                            <li><strong>Username: </strong>{result.login.username}</li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeeCard;","import React from 'react';\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <button\r\n            className={`btn ml-2 ${props.className}`}\r\n            onClick={props.handleFormSubmit}\r\n        >\r\n            {props.name}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from './Buttton';\r\n\r\nfunction SearchBar(props) {\r\n    return (\r\n        <form className='form mb-3'>\r\n            <label htmlFor='search'>Search: </label>\r\n            <input \r\n                onChange={props.handleInputChange}\r\n                value={props.value}\r\n                name='search'\r\n                type='search'\r\n                className='form-control col'\r\n                placeholder='Filter Employees by first, last, username, and location'\r\n                id='search'\r\n                />\r\n        <Button \r\n        handleFormSubmit={props.handleFormSubmit}\r\n        name={props.name}\r\n        className='btn-success'\r\n         />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport API from '../utils/API';\r\nimport EmployeeCard from './EmployeeCard';\r\nimport SearchBar from './SearchBar';\r\nimport Button from './Buttton';\r\n\r\nclass EmployeeCards extends React.Component {\r\n    state = {\r\n        search: \"\",\r\n        results: [],\r\n        filteredResults: []\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.searchEmployees();\r\n    };\r\n\r\n    renderEmployees = () => {\r\n        return this.state.filteredResults.map(results => <EmployeeCard key={results.cell} result={results} />)\r\n    };\r\n\r\n\r\n    searchEmployees = () => {\r\n        API.search()\r\n            .then(res => this.setState({\r\n                results: res.data.results,\r\n                filteredResults: res.data.results\r\n            }))\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target\r\n        this.setState(()=> {\r\n            if (!value) {\r\n                return {\r\n                    [name]: value,\r\n                    filteredResults: this.state.results\r\n                };\r\n            } else {\r\n                return { [name]: value }\r\n            };\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState(() => {\r\n            const updatedResults = this.state.filteredResults.filter(x => \r\n                x.name.first.includes(this.state.search) || \r\n                x.name.last.includes(this.state.search) ||\r\n                x.login.username.includes(this.state.search) || \r\n                x.location.state.includes(this.state.search) ||\r\n                x.location.city.includes(this.state.search))\r\n            if (!this.state.search) {\r\n                return { filteredResults: this.state.results }\r\n            } else {\r\n                return { filteredResults: updatedResults }\r\n            };\r\n        });\r\n\r\n        this.renderEmployees();\r\n    };\r\n\r\n    renderSortedEmployees = event => {\r\n        event.preventDefault();\r\n\r\n        // found at https://www.sitepoint.com/sort-an-array-of-objects-in-javascript/\r\n        function compare(a, b) {\r\n            const nameA = a.name.last.toUpperCase();\r\n            const nameB = b.name.last.toUpperCase();\r\n\r\n            let comparison = 0;\r\n            if (nameA > nameB) {\r\n                comparison = 1;\r\n            } else if (nameA < nameB) {\r\n                comparison = -1;\r\n            };\r\n            return comparison;\r\n        };\r\n\r\n        return this.setState({ filteredResults: this.state.filteredResults.sort(compare) })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <SearchBar\r\n                    handleInputChange={this.handleInputChange}\r\n                    value={this.state.search}\r\n                    handleFormSubmit={this.handleFormSubmit}\r\n                    name='Search'\r\n                />\r\n                <Button\r\n                    handleFormSubmit={this.renderSortedEmployees}\r\n                    name='Sort By Last Name'\r\n                    className='mb-3 btn-success'\r\n                />\r\n                {this.renderEmployees()}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default EmployeeCards;","import React from 'react';\r\nimport EmployeeCards from './components/EmployeeCards';\r\n\r\nfunction App () {\r\n    return (\r\n    <main className='mainDiv'>\r\n        <EmployeeCards />\r\n    </main>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}